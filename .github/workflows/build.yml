name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Cache buildozer global directory
      uses: actions/cache@v3
      with:
        path: ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
    
    - name: Cache buildozer directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-local-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-local-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-8-jdk python3-pip autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake \
          libffi-dev libssl-dev libltdl-dev libfuse2
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.32
        pip install -r requirements.txt
    
    - name: Setup Android SDK
      run: |
        # 下载Android命令行工具
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip -q commandlinetools-linux-8512546_latest.zip
        
        # 创建Android SDK目录结构
        mkdir -p $HOME/android-sdk/cmdline-tools
        mv cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        
        # 设置环境变量
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
        
        # 接受许可证
        yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
        
        # 安装必要的Android组件
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-31" "build-tools;31.0.0"
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "ndk;25.2.9519653"
    
    - name: Verify buildozer.spec
      run: |
        echo "=== buildozer.spec 内容 ==="
        cat buildozer.spec
        echo "========================="
    
    - name: Build APK (Debug)
      if: github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == ''
      run: |
        buildozer android debug
    
    - name: Build APK (Release)
      if: github.event.inputs.build_type == 'release'
      run: |
        buildozer android release
    
    - name: List generated files
      run: |
        echo "=== 生成的文件 ==="
        find . -name "*.apk" -type f
        ls -la bin/ || echo "bin目录不存在"
    
    - name: Upload Debug APK
      if: github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == ''
      uses: actions/upload-artifact@v3
      with:
        name: android-debug-apk
        path: bin/*-debug.apk
        retention-days: 30
    
    - name: Upload Release APK
      if: github.event.inputs.build_type == 'release'
      uses: actions/upload-artifact@v3
      with:
        name: android-release-apk
        path: bin/*-release*.apk
        retention-days: 90
    
    - name: Create Release (if tag)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: bin/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build Summary
      run: |
        echo "## 🎉 构建完成!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 生成的APK文件:" >> $GITHUB_STEP_SUMMARY
        for apk in bin/*.apk; do
          if [ -f "$apk" ]; then
            echo "- $(basename "$apk") ($(du -h "$apk" | cut -f1))" >> $GITHUB_STEP_SUMMARY
          fi
        done
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📥 下载方式:" >> $GITHUB_STEP_SUMMARY
        echo "1. 点击上方 'Artifacts' 部分" >> $GITHUB_STEP_SUMMARY
        echo "2. 下载对应的APK文件" >> $GITHUB_STEP_SUMMARY
        echo "3. 在Android设备上安装" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ⚙️ 构建信息:" >> $GITHUB_STEP_SUMMARY
        echo "- 构建时间: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- Python版本: $(python --version)" >> $GITHUB_STEP_SUMMARY
        echo "- Buildozer版本: $(buildozer version)" >> $GITHUB_STEP_SUMMARY
